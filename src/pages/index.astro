---
import Chart from "../components/chart.tsx";
import image from "../components/assets/worldcoo_logo_full_dark-1-1024x575.png";

const baseTotal = 17_472_152.23;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Worldcoo Kiosk</title>
  </head>
  <body class="bg-[#fae7c7] h-screen flex flex-col items-center">
    <img
      src={image.src}
      width={image.width / 3}
      height={image.height / 3}
      class="mt-8"
      alt="Worldcoo logo"
    />
    <div
      id="counter"
      class="font-bold text-5xl 2xl:text-[14rem] size-fit text-[#f18f45] text-center tracking-tighter mt-auto text-nowrap"
    >
      <span id="totalCounter" data-total={baseTotal}
        >{
          baseTotal.toLocaleString("ca-ES", {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
          })
        }</span
      > â‚¬
    </div>

    <div class="mt-auto mr-12 h-96 w-full">
      <Chart client:only="react" />
    </div>
  </body>
</html>

<script>
  import { CountUp } from "countup.js";
  import { Odometer } from "odometer_countup";
  import confetti from "canvas-confetti";
  import { $donation } from "../components/store.ts";

  let previousTotal = 0;
  const goalToThrowConfetti = 10000;

  const totalCounter = document.getElementById("totalCounter")!;
  const totalCounterTotal = Number(totalCounter.dataset.total);

  const counter = new CountUp(totalCounter, totalCounterTotal, {
    startVal: totalCounterTotal,
    decimalPlaces: 2,
    separator: ".",
    decimal: ",",
    plugin: new Odometer({ lastDigitDelay: 0 }),
    duration: 0.05,
  });

  if (!counter.error) {
    counter.start();
  } else {
    console.error(counter.error);
  }

  const updateCounter = (total: number) => {
    counter.update(total);

    // Show confetti at the end of counter animation
    if (
      previousTotal !== 0 &&
      Math.round(previousTotal) % goalToThrowConfetti === 0
    ) {
      confetti({ particleCount: 150, spread: 180 });
    }

    previousTotal = total;
  };

  const sleep = (ms: number) =>
    new Promise((resolve) => setTimeout(resolve, ms));

  while (true) {
    const now = new Date();
    const serverResponse = await fetch(
      "https://459yv0cj03.execute-api.eu-west-1.amazonaws.com/donations",
    );
    const { donations, total } = (await serverResponse.json()) as {
      donations: { amount: number; date: string }[];
      total: number;
    };

    const timeToNextDonationsRequestInSeconds = +/\d+/g.exec(
      serverResponse.headers.get("cache-control")!,
    )![0];

    let totalAmountTillNow =
      donations
        .filter((d) => new Date(d.date) <= now)
        .reduce((acc, d) => acc + d.amount, 0) + total;
    updateCounter(totalAmountTillNow);
    const newDonationsUpdates = donations
      .filter((d) => new Date(d.date) > now)
      .map((d) => {
        return new Promise((resolve) =>
          setTimeout(
            () => {
              totalAmountTillNow += d.amount;
              updateCounter(totalAmountTillNow);
              $donation.set(d);
              resolve(undefined);
            },
            new Date(d.date).getTime() - now.getTime(),
          ),
        );
      });

    await Promise.all([
      Promise.all(newDonationsUpdates),
      sleep(timeToNextDonationsRequestInSeconds * 1000),
    ]);
  }
</script>

<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap");

  body {
    font-family: "Quicksand", sans-serif;
  }

  /* Don't cut the comma */
  .odometer-numbers {
    padding: 16px;
  }

  #counter {
    position: relative;
  }

  #counter::after {
    content: "";
    position: absolute;
    top: -2px; /* Avoid floating point number artifacts on responsive */
    bottom: -2px; /* Avoid floating point number artifacts on responsive */
    left: -40px;
    right: -40px;
    box-shadow: inset 0 0 10px 10px #fae7c7;
  }

  @media screen and (max-width: 1024px) {
    .odometer-numbers {
      padding: 4px;
    }

    #counter::after {
      box-shadow: inset 0 0 4px 4px #fae7c7;
    }
  }
</style>
